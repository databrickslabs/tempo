
name: build

on:
  push:
    branches: [ '*' ]

jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [ 3.9 ]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    steps:

    - name: Checkout code
      uses: actions/checkout@master

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      working-directory: ./python
      run: |
        python -m pip install --upgrade pip
        pip install -U -r requirements.txt

    - name: Set Spark env
      run: |
        export SPARK_LOCAL_IP=127.0.0.1
        export SPARK_SUBMIT_OPTS="--illegal-access=permit -Dio.netty.tryReflectionSetAccessible=true"

    - name: Unit Tests
      working-directory: ./python
      run: python -m unittest discover -p "*_tests.py"

    - name: Generate coverage report
      working-directory: ./python
      run: |
        pip install coverage
        coverage run -m unittest discover -s tests -p '*_tests.py'
        coverage xml

    - name: Publish test coverage
      uses: codecov/codecov-action@v1
