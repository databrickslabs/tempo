[tox]
requires =
    tox>4,<5
    virtualenv>20,<21
isolated_build = True
envlist =
    ; Mirror Supported LTS DBR versions here: https://docs.databricks.com/release-notes/runtime/
    ; Use correct PySpark version based on Python version present in env name
    dbr{91,104,113,122,133,143}
    coverage-report
skip_missing_interpreters = true

[testenv]
description = run the tests under {envname}
package = wheel
wheel_build_env = .pkg
setenv =
    COVERAGE_FILE = .coverage.{envname}
basepython =    
    dbr143: py310
    dbr133: py310
    dbr122: py39
    dbr113: py39
    dbr104: py38
deps =
    -rrequirements/dev.txt
    -rrequirements/{envname}.txt
commands =
    coverage erase
    coverage run -m unittest discover -s tests -p '*_tests.py'

[testenv:dbr104]
deps =
    -rrequirements/dev.txt
commands =
    # Get the architecture of the system
    sys_arch=$(uname -m)
    echo "System Architecture: $sys_arch"
    # Check if the architecture is arm64
    if [ "sys_arch" = "arm64" ]; then
        pip install -r requirements/{envname}_arm64.txt
        ;https://github.com/apache/arrow/blob/release-4.0.0/python/requirements-wheel-build.txt
        ;Building pyarrow with no dependencies because NumPy 1.16.5 is not supported on
        ;MacOS with arm64 arch. The Numpy version is pinned in the requirements.txt to
        ;1.20 to avoid the issue, and is compatible with pyarrow 4.0.
        pip install pyarrow~=4.0.0 --no-deps
        ;https://pandas.pydata.org/pandas-docs/version/1.2/getting_started/install.html#dependencies
        ;Building pandas with no dependencies because NumPy 1.16.5 is not supported on
        ;MacOS with arm64 arch. The Numpy version is pinned in the requirements.txt to
        ;1.20 to avoid the issue, and is compatible with pandas 1.2.
        pip install pandas~=1.2.4 --no-deps
        ;https://docs.scipy.org/doc/scipy/dev/toolchain.html#numpy
        ;Building scipy with no dependencies because NumPy 1.16.5 is not supported on
        ;MacOS with arm64 arch. The Numpy version is pinned in the requirements.txt to
        ;1.20 to avoid the issue, and is compatible with scipy.1.6.
        pip install scipy~=1.6.2 --no-deps
    else
        pip install -r requirements/{envname}.txt
    fi
    coverage erase
    coverage run -m unittest discover -s tests -p '*_tests.py'

[testenv:lint]
description = run linters
skipsdist = true
skip_install = true
deps =
    flake8
    black==24.4.1
commands =
    black {posargs} {toxinidir}/tempo
    flake8 --config {toxinidir}/.flake8 {toxinidir}/tempo

[testenv:type-check]
description = run type checks
skipsdist = true
skip_install = true
deps =
    mypy>=1,<2
    pandas-stubs>=2,<3
    numpy
    types-openpyxl
commands =
    mypy --install-types {toxinidir}/tempo

[testenv:build-dist]
description = build distribution
skip_install = true
deps =
    build
    semver
commands =
    python setup.py clean bdist_wheel

[testenv:build-docs]
description = build distribution
allowlist_externals = make
deps =
    -r ../docs/requirements.txt
    semver
commands =
    make --directory ../docs html

[testenv:coverage-report]
description = combine coverage data and generate reports
deps = coverage>=7,<8
skipdist = true
skip_install = true
setenv =
    COVERAGE_FILE = .coverage
commands =
    coverage combine
    coverage report -m
    coverage xml
